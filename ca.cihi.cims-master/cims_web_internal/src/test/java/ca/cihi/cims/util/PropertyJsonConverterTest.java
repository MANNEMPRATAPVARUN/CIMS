package ca.cihi.cims.util;

import static org.junit.Assert.assertEquals;

import org.junit.Before;
import org.junit.Test;

import com.fasterxml.jackson.databind.JsonNode;

import ca.cihi.cims.model.changerequest.ChangeRequest;
import ca.cihi.cims.service.folioclamlexport.LinkExtractor;

public class PropertyJsonConverterTest {

    private  PropertyJsonConverter propertyConverter;
    
    @Before
    public void setUp()     {
        propertyConverter = new PropertyJsonConverter();
    }

    @Test
    public void testSortCategegoryWithDagger() {
        String rawXml = "<?xml version=\"1.0\" encoding=\"UTF-8\"?><!DOCTYPE index SYSTEM \"/dtd/cihi_cims_index.dtd\"><index language=\"ENG\" classification=\"ICD-10-CA\"><BOOK_INDEX_TYPE>A</BOOK_INDEX_TYPE><ELEMENT_ID>374733</ELEMENT_ID><INDEX_TYPE>INDEX_TERM</INDEX_TYPE><LEVEL_NUM>3</LEVEL_NUM><SEE_ALSO_FLAG>N</SEE_ALSO_FLAG><REFERENCE_LIST><CATEGORY_REFERENCE_LIST><CATEGORY_REFERENCE><MAIN_CODE_PRESENTATION>G07</MAIN_CODE_PRESENTATION><MAIN_CONTAINER_CONCEPT_ID>/38/72639/72651/73281</MAIN_CONTAINER_CONCEPT_ID><MAIN_CODE>G07</MAIN_CODE><MAIN_DAGGER_ASTERISK>*</MAIN_DAGGER_ASTERISK><PAIRED_FLAG>X</PAIRED_FLAG><SORT_STRING>aaa-sort-string-zzz###G07</SORT_STRING></CATEGORY_REFERENCE><CATEGORY_REFERENCE><MAIN_CODE_PRESENTATION>B43.1</MAIN_CODE_PRESENTATION><MAIN_CONTAINER_CONCEPT_ID>/38/45/11084/12333/12363</MAIN_CONTAINER_CONCEPT_ID><MAIN_CODE>B43.1</MAIN_CODE><MAIN_DAGGER_ASTERISK>+</MAIN_DAGGER_ASTERISK><PAIRED_FLAG>X</PAIRED_FLAG><SORT_STRING>aaa-sort-string-ccc###B43.1</SORT_STRING></CATEGORY_REFERENCE></CATEGORY_REFERENCE_LIST></REFERENCE_LIST></index>";
        String expected = "<?xml version=\"1.0\" encoding=\"UTF-8\"?><!DOCTYPE index SYSTEM \"/dtd/cihi_cims_index.dtd\"><index language=\"ENG\" classification=\"ICD-10-CA\"><BOOK_INDEX_TYPE>A</BOOK_INDEX_TYPE><ELEMENT_ID>374733</ELEMENT_ID><INDEX_TYPE>INDEX_TERM</INDEX_TYPE><LEVEL_NUM>3</LEVEL_NUM><SEE_ALSO_FLAG>N</SEE_ALSO_FLAG><REFERENCE_LIST><CATEGORY_REFERENCE_LIST><CATEGORY_REFERENCE><MAIN_CODE_PRESENTATION>B43.1</MAIN_CODE_PRESENTATION><MAIN_CONTAINER_CONCEPT_ID>/38/45/11084/12333/12363</MAIN_CONTAINER_CONCEPT_ID><MAIN_CODE>B43.1</MAIN_CODE><MAIN_DAGGER_ASTERISK>+</MAIN_DAGGER_ASTERISK><PAIRED_FLAG>X</PAIRED_FLAG><SORT_STRING>aaa-sort-string-ccc###B43.1</SORT_STRING></CATEGORY_REFERENCE><CATEGORY_REFERENCE><MAIN_CODE_PRESENTATION>G07</MAIN_CODE_PRESENTATION><MAIN_CONTAINER_CONCEPT_ID>/38/72639/72651/73281</MAIN_CONTAINER_CONCEPT_ID><MAIN_CODE>G07</MAIN_CODE><MAIN_DAGGER_ASTERISK>*</MAIN_DAGGER_ASTERISK><PAIRED_FLAG>X</PAIRED_FLAG><SORT_STRING>aaa-sort-string-zzz###G07</SORT_STRING></CATEGORY_REFERENCE></CATEGORY_REFERENCE_LIST></REFERENCE_LIST></index>";
        String result = propertyConverter.correctXmlElementCategoryReferenceOrder(rawXml);
        assertEquals(expected, result);
    }

    @Test
    public void testSortCategegoryWithStarAndEmpty() {
        String rawXml = "<?xml version=\"1.0\" encoding=\"UTF-8\"?><!DOCTYPE index SYSTEM \"/dtd/cihi_cims_index.dtd\"><index language=\"ENG\" classification=\"ICD-10-CA\"><BOOK_INDEX_TYPE>A</BOOK_INDEX_TYPE><ELEMENT_ID>374561</ELEMENT_ID><INDEX_TYPE>INDEX_TERM</INDEX_TYPE><LEVEL_NUM>2</LEVEL_NUM><SEE_ALSO_FLAG>N</SEE_ALSO_FLAG><REFERENCE_LIST><CATEGORY_REFERENCE_LIST><CATEGORY_REFERENCE><MAIN_CODE_PRESENTATION>K77.0</MAIN_CODE_PRESENTATION><MAIN_CONTAINER_CONCEPT_ID>/38/105837/113774/114786/114797</MAIN_CONTAINER_CONCEPT_ID><MAIN_CODE>K77.0</MAIN_CODE><MAIN_DAGGER_ASTERISK>*</MAIN_DAGGER_ASTERISK><PAIRED_FLAG>X</PAIRED_FLAG><SORT_STRING>aaa-sort-string-zzz###K77.0</SORT_STRING></CATEGORY_REFERENCE><CATEGORY_REFERENCE><MAIN_CODE_PRESENTATION>A06.4</MAIN_CODE_PRESENTATION><MAIN_CONTAINER_CONCEPT_ID>/38/45/61/848/938</MAIN_CONTAINER_CONCEPT_ID><MAIN_CODE>A06.4</MAIN_CODE><MAIN_DAGGER_ASTERISK>+</MAIN_DAGGER_ASTERISK><PAIRED_FLAG>X</PAIRED_FLAG><SORT_STRING>aaa-sort-string-bbb###A06.4</SORT_STRING></CATEGORY_REFERENCE></CATEGORY_REFERENCE_LIST></REFERENCE_LIST></index>";
        String expected = "<?xml version=\"1.0\" encoding=\"UTF-8\"?><!DOCTYPE index SYSTEM \"/dtd/cihi_cims_index.dtd\"><index language=\"ENG\" classification=\"ICD-10-CA\"><BOOK_INDEX_TYPE>A</BOOK_INDEX_TYPE><ELEMENT_ID>374561</ELEMENT_ID><INDEX_TYPE>INDEX_TERM</INDEX_TYPE><LEVEL_NUM>2</LEVEL_NUM><SEE_ALSO_FLAG>N</SEE_ALSO_FLAG><REFERENCE_LIST><CATEGORY_REFERENCE_LIST><CATEGORY_REFERENCE><MAIN_CODE_PRESENTATION>A06.4</MAIN_CODE_PRESENTATION><MAIN_CONTAINER_CONCEPT_ID>/38/45/61/848/938</MAIN_CONTAINER_CONCEPT_ID><MAIN_CODE>A06.4</MAIN_CODE><MAIN_DAGGER_ASTERISK>+</MAIN_DAGGER_ASTERISK><PAIRED_FLAG>X</PAIRED_FLAG><SORT_STRING>aaa-sort-string-bbb###A06.4</SORT_STRING></CATEGORY_REFERENCE><CATEGORY_REFERENCE><MAIN_CODE_PRESENTATION>K77.0</MAIN_CODE_PRESENTATION><MAIN_CONTAINER_CONCEPT_ID>/38/105837/113774/114786/114797</MAIN_CONTAINER_CONCEPT_ID><MAIN_CODE>K77.0</MAIN_CODE><MAIN_DAGGER_ASTERISK>*</MAIN_DAGGER_ASTERISK><PAIRED_FLAG>X</PAIRED_FLAG><SORT_STRING>aaa-sort-string-zzz###K77.0</SORT_STRING></CATEGORY_REFERENCE></CATEGORY_REFERENCE_LIST></REFERENCE_LIST></index>";
        String result = propertyConverter.correctXmlElementCategoryReferenceOrder(rawXml);
        assertEquals(expected, result);
    }

    @Test
    public void testSortCategegoryWithDaggertStarAndEmpty() {
        String rawXml = "<?xml version=\"1.0\" encoding=\"UTF-8\"?><!DOCTYPE index SYSTEM \"/dtd/cihi_cims_index.dtd\"><index language=\"ENG\" classification=\"ICD-10-CA\"><BOOK_INDEX_TYPE>A</BOOK_INDEX_TYPE><ELEMENT_ID>374561</ELEMENT_ID><INDEX_TYPE>INDEX_TERM</INDEX_TYPE><LEVEL_NUM>2</LEVEL_NUM><SEE_ALSO_FLAG>N</SEE_ALSO_FLAG><REFERENCE_LIST><CATEGORY_REFERENCE_LIST><CATEGORY_REFERENCE><MAIN_CODE_PRESENTATION>K77.0</MAIN_CODE_PRESENTATION><MAIN_CONTAINER_CONCEPT_ID>/38/105837/113774/114786/114797</MAIN_CONTAINER_CONCEPT_ID><MAIN_CODE>K77.0</MAIN_CODE><MAIN_DAGGER_ASTERISK>*</MAIN_DAGGER_ASTERISK><PAIRED_FLAG>X</PAIRED_FLAG><SORT_STRING>aaa-sort-string-zzz###K77.0</SORT_STRING></CATEGORY_REFERENCE><CATEGORY_REFERENCE><MAIN_CODE_PRESENTATION>A06.4</MAIN_CODE_PRESENTATION><MAIN_CONTAINER_CONCEPT_ID>/38/45/61/848/938</MAIN_CONTAINER_CONCEPT_ID><MAIN_CODE>A06.4</MAIN_CODE><MAIN_DAGGER_ASTERISK>+</MAIN_DAGGER_ASTERISK><PAIRED_FLAG>X</PAIRED_FLAG><SORT_STRING>aaa-sort-string-bbb###A06.4</SORT_STRING></CATEGORY_REFERENCE><CATEGORY_REFERENCE><MAIN_CODE_PRESENTATION>A06.4</MAIN_CODE_PRESENTATION><MAIN_CONTAINER_CONCEPT_ID>/38/45/61/848/938</MAIN_CONTAINER_CONCEPT_ID><MAIN_CODE>A06.4</MAIN_CODE><MAIN_DAGGER_ASTERISK></MAIN_DAGGER_ASTERISK><PAIRED_FLAG>X</PAIRED_FLAG><SORT_STRING>aaa-sort-string-bbb###A06.4</SORT_STRING></CATEGORY_REFERENCE></CATEGORY_REFERENCE_LIST></REFERENCE_LIST></index>";
        String expected = "<?xml version=\"1.0\" encoding=\"UTF-8\"?><!DOCTYPE index SYSTEM \"/dtd/cihi_cims_index.dtd\"><index language=\"ENG\" classification=\"ICD-10-CA\"><BOOK_INDEX_TYPE>A</BOOK_INDEX_TYPE><ELEMENT_ID>374561</ELEMENT_ID><INDEX_TYPE>INDEX_TERM</INDEX_TYPE><LEVEL_NUM>2</LEVEL_NUM><SEE_ALSO_FLAG>N</SEE_ALSO_FLAG><REFERENCE_LIST><CATEGORY_REFERENCE_LIST><CATEGORY_REFERENCE><MAIN_CODE_PRESENTATION>A06.4</MAIN_CODE_PRESENTATION><MAIN_CONTAINER_CONCEPT_ID>/38/45/61/848/938</MAIN_CONTAINER_CONCEPT_ID><MAIN_CODE>A06.4</MAIN_CODE><MAIN_DAGGER_ASTERISK>+</MAIN_DAGGER_ASTERISK><PAIRED_FLAG>X</PAIRED_FLAG><SORT_STRING>aaa-sort-string-bbb###A06.4</SORT_STRING></CATEGORY_REFERENCE><CATEGORY_REFERENCE><MAIN_CODE_PRESENTATION>A06.4</MAIN_CODE_PRESENTATION><MAIN_CONTAINER_CONCEPT_ID>/38/45/61/848/938</MAIN_CONTAINER_CONCEPT_ID><MAIN_CODE>A06.4</MAIN_CODE><MAIN_DAGGER_ASTERISK></MAIN_DAGGER_ASTERISK><PAIRED_FLAG>X</PAIRED_FLAG><SORT_STRING>aaa-sort-string-bbb###A06.4</SORT_STRING></CATEGORY_REFERENCE><CATEGORY_REFERENCE><MAIN_CODE_PRESENTATION>K77.0</MAIN_CODE_PRESENTATION><MAIN_CONTAINER_CONCEPT_ID>/38/105837/113774/114786/114797</MAIN_CONTAINER_CONCEPT_ID><MAIN_CODE>K77.0</MAIN_CODE><MAIN_DAGGER_ASTERISK>*</MAIN_DAGGER_ASTERISK><PAIRED_FLAG>X</PAIRED_FLAG><SORT_STRING>aaa-sort-string-zzz###K77.0</SORT_STRING></CATEGORY_REFERENCE></CATEGORY_REFERENCE_LIST></REFERENCE_LIST></index>";
        String result = propertyConverter.correctXmlElementCategoryReferenceOrder(rawXml);
        assertEquals(expected, result);
    }

    @Test
    public void testParseXML() {
        String rawXml = "<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?><index language=\\\"ENG\\\" classification=\\\"CCI\\\"><BOOK_INDEX_TYPE>A</BOOK_INDEX_TYPE><ELEMENT_ID>1530801</ELEMENT_ID><INDEX_TYPE>INDEX_TERM</INDEX_TYPE><LEVEL_NUM>1</LEVEL_NUM><SEE_ALSO_FLAG>Y</SEE_ALSO_FLAG><REFERENCE_LIST><INDEX_REF_LIST><INDEX_REF><REFERENCE_LINK_DESC>Graft</REFERENCE_LINK_DESC><CONTAINER_INDEX_ID>/1114079/1524464/1524493/1549977</CONTAINER_INDEX_ID></INDEX_REF><INDEX_REF><REFERENCE_LINK_DESC>Shunt, by site</REFERENCE_LINK_DESC><CONTAINER_INDEX_ID>/1114079/1524464/1524541/1576249</CONTAINER_INDEX_ID></INDEX_REF><INDEX_REF><REFERENCE_LINK_DESC>Diversion</REFERENCE_LINK_DESC><CONTAINER_INDEX_ID>/1114079/1524464/1524481/1539749</CONTAINER_INDEX_ID></INDEX_REF></INDEX_REF_LIST></REFERENCE_LIST></index>";
        String expected = "<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?><index language=\\\"ENG\\\" classification=\\\"CCI\\\"><BOOK_INDEX_TYPE>A</BOOK_INDEX_TYPE><ELEMENT_ID>1530801</ELEMENT_ID><INDEX_TYPE>INDEX_TERM</INDEX_TYPE><LEVEL_NUM>1</LEVEL_NUM><SEE_ALSO_FLAG>Y</SEE_ALSO_FLAG><REFERENCE_LIST><INDEX_REF_LIST><INDEX_REF><REFERENCE_LINK_DESC>Diversion</REFERENCE_LINK_DESC><CONTAINER_INDEX_ID>/1114079/1524464/1524481/1539749</CONTAINER_INDEX_ID></INDEX_REF><INDEX_REF><REFERENCE_LINK_DESC>Graft</REFERENCE_LINK_DESC><CONTAINER_INDEX_ID>/1114079/1524464/1524493/1549977</CONTAINER_INDEX_ID></INDEX_REF><INDEX_REF><REFERENCE_LINK_DESC>Shunt, by site</REFERENCE_LINK_DESC><CONTAINER_INDEX_ID>/1114079/1524464/1524541/1576249</CONTAINER_INDEX_ID></INDEX_REF></INDEX_REF_LIST></REFERENCE_LIST></index>";
        String result = propertyConverter.correctXmlElementIndexReferenceOrder(rawXml);
        assertEquals(expected, result);
    }
    
}
